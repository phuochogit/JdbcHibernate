package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import database.JDBCUtil;
import model.KhachHang;
import model.Sach;

public class KhachHangDAO implements DAOInterface<KhachHang>{
	public static KhachHangDAO getInstance()
	{
		return new KhachHangDAO();
	}

	@Override
	public int insert(KhachHang t) {
		int ketQua = 0;
		try {
			//Buoc 1: Tao ket noi den csdl.
			Connection con = JDBCUtil.getConnection();
			
			//Buoc 2: Tao ra doi tuong statement.
			Statement st = con.createStatement();
			
			//Buoc 3: Thuc thi cau lenh sql.
			String sql = "INSERT INTO khachhang(hoVaTen, ngaySinh, diaChi) "
						  + "VALUES('"+t.getHoVaTen()+"','"+t.getNgaySinh()+"','"+t.getDiaChi()+"');";
			
			ketQua = st.executeUpdate(sql);//Tra ve so luong dong thay doi.
			
			//Buoc 4: Xu ly ket qua.
			System.out.println("Ban da thuc thi: "+ sql);
			System.out.println("Co "+ketQua+ " dong bi thay doi");
			
			//Buoc 5: Ngat ket noi. Vi du mua hang bach hoa xanh, tinh tien xong phai roi di tuc ngat ket noi, de nguoi tiep theo co the duoc tiep tuc tinh tien.
			JDBCUtil.closeConnection(con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	public int update(KhachHang t) {
		int ketQua = 0;
		try { 
			//Buoc 1: Tao ket noi den csdl.
			Connection con = JDBCUtil.getConnection();
			
			//Buoc 2: Tao ra doi tuong statement.
			Statement st = con.createStatement();//Creates a Statement object for sendingSQL statements to the database.
			
			//Buoc 3: Thuc thi cau lenh sql.
			String sql = "UPDATE khachhang"
						  + " SET"
						  	+ " diaChi='"+t.getDiaChi()+"'"
						  + " WHERE"
						  	+ " hoVaTen = '"+t.getHoVaTen()+"'"+";";
			System.out.println(sql);
			
			ketQua = st.executeUpdate(sql);
			
			//Buoc 4: Xu ly ket qua.
			System.out.println("Ban da thuc thi: "+ sql);
			System.out.println("Co "+ketQua+ " dong bi thay doi");
			
			//Buoc 5: Ngat ket noi. 
			JDBCUtil.closeConnection(con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	public int delete(KhachHang t) {
		int ketQua = 0;
		try { 
			//Buoc 1: Tao ket noi den csdl.
			Connection con = JDBCUtil.getConnection();
			
			//Buoc 2: Tao ra doi tuong statement.
			Statement st = con.createStatement();//Creates a Statement object for sendingSQL statements to the database.
			
			//Buoc 3: Thuc thi cau lenh sql.
			String sql = "DELETE FROM khachhang"		  
						  + " WHERE"
						  	+ " hoVaTen = '"+t.getHoVaTen()+"'"+";";
			System.out.println(sql);
			
			ketQua = st.executeUpdate(sql);//Tra ve so luong dong thay doi.
			
			//Buoc 4: Xu ly ket qua.
			System.out.println("Ban da thuc thi: "+ sql);
			System.out.println("Co "+ketQua+ " dong bi thay doi");
			
			//Buoc 5: Ngat ket noi. 
			JDBCUtil.closeConnection(con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	public ArrayList<KhachHang> selectAll() {
		ArrayList<KhachHang> ketQua = new ArrayList<KhachHang>();
		try { 
			//Buoc 1: Tao ket noi den csdl.
			Connection con = JDBCUtil.getConnection();
			
			//Buoc 2: Tao ra doi tuong statement.
			Statement st = con.createStatement();//Creates a Statement object for sendingSQL statements to the database.
			
			//Buoc 3: Thuc thi cau lenh sql.
			String sql = "SELECT * FROM khachhang;";
			System.out.println(sql);
			
			ResultSet rs = st.executeQuery(sql);//Saved data get from database into ResultSet.
			//excuteQuery là câu lệnh lấy dữ liệu từ csdl MySQL và đưa lên chương trình console Java. ResultSet is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.
			
			//Buoc 4: Xu ly ket qua.
			while(rs.next())//next() get first row in result set table, then second, and so on. Return true if data still have, return false if out of data.
			{
				Integer id = rs.getInt("id");//Parameter columnLabel not columnIdex because if i create new column in database before id. The sequence of index will change, and it is affect on the result.  
				String hoVaTen = rs.getString("hoVaTen");
				Date ngaySinh = rs.getDate("ngaySinh");
				String diaChi = rs.getString("diaChi");
				
				KhachHang khachhang = new KhachHang(id,hoVaTen,ngaySinh,diaChi);
				ketQua.add(khachhang);//Appends the specified element to the end of this list.
				
			}
			//Buoc 5: Ngat ket noi. 
			JDBCUtil.closeConnection(con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return ketQua;
	}

	
	@Override
	public KhachHang selectById(KhachHang t) {
		// TODO Auto-generated method stub
		return null;
	}
	public KhachHang selectByHovaten(KhachHang t) {
		KhachHang ketQua = null;
		try { 
			//Buoc 1: Tao ket noi den csdl.
			Connection con = JDBCUtil.getConnection();
			
			//Buoc 2: Tao ra doi tuong statement.
			Statement st = con.createStatement();//Creates a Statement object for sendingSQL statements to the database.
			
			//Buoc 3: Thuc thi cau lenh sql.
			String sql = "SELECT * FROM khachhang WHERE hoVaTen = '"+t.getHoVaTen()+"'"+";";
			System.out.println(sql);
			
			ResultSet rs = st.executeQuery(sql);//Saved data get from database into ResultSet.
			//excuteQuery là câu lệnh lấy dữ liệu từ csdl MySQL và đưa lên chương trình console Java. ResultSet is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.
			
			//Buoc 4: Xu ly ket qua.
			while(rs.next())//next() get first row in result set table, then second, and so on. Return true if data still have, return false if out of data.
			{
				Integer id = rs.getInt("id");//Parameter columnLabel not columnIdex because if i create new column in database before id. The sequence of index will change, and it is affect on the result.  
				String hoVaTen = rs.getString("hoVaTen");
				Date ngaySinh = rs.getDate("ngaySinh");
				String diaChi = rs.getString("diaChi");
				
				ketQua = new KhachHang(id, hoVaTen, ngaySinh, diaChi);
				
			}
			//Buoc 5: Ngat ket noi. 
			JDBCUtil.closeConnection(con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return ketQua;
	}

	@Override
	public ArrayList<KhachHang> selectByCondition(String condition) {
		
		ArrayList<KhachHang> ketQua = new ArrayList<KhachHang>();
		try { 
			//Buoc 1: Tao ket noi den csdl.
			Connection con = JDBCUtil.getConnection();
			
			//Buoc 2: Tao ra doi tuong statement.
			Statement st = con.createStatement();//Creates a Statement object for sendingSQL statements to the database.
			
			//Buoc 3: Thuc thi cau lenh sql.
			String sql = "SELECT * FROM khachhang WHERE " + condition + ";";
			System.out.println(sql);
			
			ResultSet rs = st.executeQuery(sql);//Saved data get from database into ResultSet.
			//excuteQuery là câu lệnh lấy dữ liệu từ csdl MySQL và đưa lên chương trình console Java. ResultSet is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.
			
			//Buoc 4: Xu ly ket qua.
			while(rs.next())//next() get first row in result set table, then second, and so on. Return true if data still have, return false if out of data.
			{
				Integer id = rs.getInt("id");//Parameter columnLabel not columnIdex because if i create new column in database before id. The sequence of index will change, and it is affect on the result.  
				String hoVaTen = rs.getString("hoVaTen");
				Date ngaySinh = rs.getDate("ngaySinh");
				String diaChi = rs.getString("diaChi");
				
				KhachHang khachhang = new KhachHang(id,hoVaTen,ngaySinh,diaChi);
				ketQua.add(khachhang);//Appends the specified element to the end of this list.
				
			}
			//Buoc 5: Ngat ket noi. 
			JDBCUtil.closeConnection(con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return ketQua;
	}
	
	
}
