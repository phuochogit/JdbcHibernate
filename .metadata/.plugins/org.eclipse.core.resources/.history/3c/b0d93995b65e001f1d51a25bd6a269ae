package dao;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Query;

import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.Session;
import model.Cat;
import util.HibernateUtil;

public class CatDAO implements DAOInterface<Cat>{

	public static CatDAO getInstance()
	{
		return new CatDAO();
	}
	@Override
	public List<Cat> selectAll() {
		List<Cat> list = new ArrayList();
		try {//If catch the error, avoid stopping the program, if program stop, will lose data. The program still run for bellow command. Not losing data.
			SessionFactory sessionFactory = HibernateUtil.getSessionFactory();//Run the Factory.
			if(sessionFactory!=null)
			{
				Session session = sessionFactory.openSession();//Open session from factory. 
				
				Transaction tr = session.beginTransaction();//Prepare to run for session.
				
				String hql = "from Cat";
				
				Query query = session.createQuery(hql);
				
				list = query.getResultList();
				
				tr.commit();//Run session.
				
				session.close();
			}
			else
			{
				return null;
			}
		} catch (Exception e) {
			e.printStackTrace();//Show detail for the error.
		}
		return list;
	}

	@Override
	public Cat selectById(Cat t) {
		List<Cat> list = new ArrayList();
		try {//If catch the error, avoid stopping the program, if program stop, will lose data. The program still run for bellow command. Not losing data.
			SessionFactory sessionFactory = HibernateUtil.getSessionFactory();//Run the Factory.
			if(sessionFactory!=null)
			{
				Session session = sessionFactory.openSession();//Open session from factory. 
				
				Transaction tr = session.beginTransaction();//Prepare to run for session.
				
				String hql = "from Cat where id = :id";
				
				Query query = session.createQuery(hql);
				
				query.setParameter("id", t.getId());//Instead of using position, using name because when change the order of column if use position, they will catch an error. If use name, they will based on the name and set paratemeter for that name, for example query.set parameter("id",t.getId()).Bind an argument value to a named parameter.Parameters:name parameter namevalue parameter valueReturns:the same query instanceThrows:IllegalArgumentException - if the parameter name doesnot correspond to a parameter of the query or ifthe argument is of incorrect type.
				
				list = query.getResultList();
				
				tr.commit();//Run session.
				
				session.close();
			}
			else
			{
				return null;
			}
		} catch (Exception e) {
			e.printStackTrace();//Show detail for the error.
		}
		
		if(list.size()>0)//If found id
		{
			return list.get(0);
		}
		else
		{
			return null;
		}
		
	}

	@Override
	public boolean insert(Cat t) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean update(Cat t) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean delete(Cat t) {
		// TODO Auto-generated method stub
		return false;
	}

}
